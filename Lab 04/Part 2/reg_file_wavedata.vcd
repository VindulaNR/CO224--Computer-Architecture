$date
	Sat May  9 15:50:53 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module reg_file_tb $end
$var wire 8 ! REGOUT2 [7:0] $end
$var wire 8 " REGOUT1 [7:0] $end
$var reg 1 # CLK $end
$var reg 3 $ READREG1 [2:0] $end
$var reg 3 % READREG2 [2:0] $end
$var reg 1 & RESET $end
$var reg 8 ' WRITEDATA [7:0] $end
$var reg 1 ( WRITEENABLE $end
$var reg 3 ) WRITEREG [2:0] $end
$scope module myregfile $end
$var wire 1 # clk $end
$var wire 3 * readAddrA [2:0] $end
$var wire 3 + readAddrB [2:0] $end
$var wire 8 , readDataA [7:0] $end
$var wire 8 - readDataB [7:0] $end
$var wire 1 & reset $end
$var wire 1 ( write $end
$var wire 3 . writeAddr [2:0] $end
$var wire 8 / writeData [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
0(
bx '
0&
bx %
bx $
1#
bx "
bx !
$end
#1
b100 %
b100 +
b0 $
b0 *
1&
#5
b0 !
b0 -
b0 "
b0 ,
0#
#9
0&
#10
1#
#14
1(
b100011 '
b100011 /
b11 )
b11 .
#15
0#
#20
1#
#24
0(
#25
b11 $
b11 *
0#
#27
b100011 "
b100011 ,
#30
1#
#34
b1 $
b1 *
1(
b110101 '
b110101 /
b1 )
b1 .
#35
0#
#36
b0 "
b0 ,
#40
1#
#44
b110101 "
b110101 ,
0(
#45
0#
#50
1#
#54
1(
b1100010 '
b1100010 /
b100 )
b100 .
#55
0#
#60
1#
#64
b1100010 !
b1100010 -
b1111 '
b1111 /
#65
0#
#70
1#
#74
b1111 !
b1111 -
0(
#75
0#
#80
1#
1(
b110010 '
b110010 /
b1 )
b1 .
#84
b110010 "
b110010 ,
#85
0#
0(
#90
1#
#93
1(
b100100 '
b100100 /
b11 )
b11 .
#95
0#
#98
0(
#99
b111 %
b111 +
b11 $
b11 *
#100
1#
#101
b0 !
b0 -
b100011 "
b100011 ,
#104
1(
b11000 '
b11000 /
b111 )
b111 .
#105
0#
#110
1#
#114
b11000 !
b11000 -
0(
#115
0#
#120
1#
#124
